{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/Section/Section.jsx","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Section","title","children","className","css","section","Statistics","good","neutral","bad","total","positivePercentage","statistic","FeedbackOptiops","options","onLeaveFeedback","map","option","feedbackBtn","type","name","onClick","Notification","message","App","state","handleBtnClick","e","setState","prevState","target","this","countTotalFeedback","persentOfGood","toFixed","Object","keys","countPositiveFeedbackPercentage","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,UAAY,gC,qBCA9BD,EAAOC,QAAU,CAAC,QAAU,2B,gBCA5BD,EAAOC,QAAU,CAAC,YAAc,uC,gBCAhCD,EAAOC,QAAU,CAAC,QAAU,gC,qKCCb,SAASC,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,0BAASC,UAAWC,IAAIC,QAAxB,UACE,6BAAKJ,IACJC,K,oBCJQ,SAASI,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,+BACE,+BACE,sBAAMR,UAAWC,IAAIQ,UAArB,mBADF,IACgDL,KAEhD,+BACE,sBAAMJ,UAAWC,IAAIQ,UAArB,sBADF,IACmDJ,KAEnD,+BACE,sBAAML,UAAWC,IAAIQ,UAArB,kBADF,IAC+CH,KAE/C,+BACE,sBAAMN,UAAWC,IAAIQ,UAArB,oBADF,IACiDF,KAEjD,+BACE,sBAAMP,UAAWC,IAAIQ,UAArB,gCADF,IAC6DD,EAD7D,U,oBCrBS,SAASE,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACjD,OACE,8BACGD,EAAQE,KAAI,SAACC,GAAD,OACX,wBACEd,UAAWC,IAAIc,YACfC,KAAK,SAELC,KAAMH,EACNI,QAASN,EALX,SAOGE,GAJIA,Q,qBCPA,SAASK,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,mBAAGpB,UAAWC,IAAImB,QAAlB,SAA4BA,I,ICGhBC,E,4MACnBC,MAAQ,CACNlB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPiB,eAAiB,SAACC,GAChB,EAAKC,UAAS,SAACC,GACb,OAAO,eACJF,EAAEG,OAAOV,KAAOS,EAAUF,EAAEG,OAAOV,MAAQ,O,wDAKlD,WACE,MAA+BW,KAAKN,MAEpC,OAFA,EAAQlB,KAAR,EAAcC,QAAd,EAAuBC,M,6CAKzB,WACE,IAAQF,EAASwB,KAAKN,MAAdlB,KACFG,EAAQqB,KAAKC,qBACbC,GAAkB1B,EAAOG,EAAS,KAAKwB,QAAQ,GAErD,OAAOxB,EAAQuB,EAAgB,I,oBAGjC,WACE,MAA+BF,KAAKN,MAA5BlB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACvB,OACE,qCACE,cAACT,EAAD,CAASC,MAAM,wBAAf,SACE,cAACY,EAAD,CACEC,QAASqB,OAAOC,KAAKL,KAAKN,OAC1BV,gBAAiBgB,KAAKL,mBAI1B,cAAC1B,EAAD,CAASC,MAAM,aAAf,SACG8B,KAAKC,qBAAuB,EAC3B,cAAC1B,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOqB,KAAKC,qBACZrB,mBAAoBoB,KAAKM,oCAG3B,cAACf,EAAD,CAAcC,QAAQ,+B,GAlDDe,aCMlBC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7d75c1fd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistic\":\"Statistics_statistic__12KD7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1b-Wc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackBtn\":\"FeedbackOptions_feedbackBtn__2uU6F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__9P4Tz\"};","import css from \"./Section.module.css\";\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <section className={css.section}>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n","import css from \"./Statistics.module.css\";\r\n\r\nexport default function Statistics({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  total,\r\n  positivePercentage,\r\n}) {\r\n  return (\r\n    <ul>\r\n      <li>\r\n        <span className={css.statistic}>Good:</span> {good}\r\n      </li>\r\n      <li>\r\n        <span className={css.statistic}>Neutral:</span> {neutral}\r\n      </li>\r\n      <li>\r\n        <span className={css.statistic}>Bad:</span> {bad}\r\n      </li>\r\n      <li>\r\n        <span className={css.statistic}>Total:</span> {total}\r\n      </li>\r\n      <li>\r\n        <span className={css.statistic}>Positive Feedback:</span> {positivePercentage}%\r\n     </li>   \r\n    </ul>\r\n  );\r\n}\r\n","import css from \"./FeedbackOptions.module.css\";\r\n\r\nexport default function FeedbackOptiops({ options, onLeaveFeedback }) {\r\n  return (\r\n    <div>\r\n      {options.map((option) => (\r\n        <button\r\n          className={css.feedbackBtn}\r\n          type=\"button\"\r\n          key={option}\r\n          name={option}\r\n          onClick={onLeaveFeedback}\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import css from \"./Notification.module.css\";\r\n\r\nexport default function Notification({ message }) {\r\n  return <p className={css.message}>{message}</p>;\r\n}\r\n","import React, { Component } from \"react\";\nimport Section from \"./components/Section/Section.jsx\";\nimport Statistics from \"./components/Statistics/Statistics.jsx\";\nimport FeedbackOptiops from \"./components/FeedbackOptions/FeedbackOptions.jsx\";\nimport Notification from \"./components/Notification/Notification.jsx\";\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleBtnClick = (e) => {\n    this.setState((prevState) => {\n      return {\n        [e.target.name]: prevState[e.target.name] + 1,\n      };\n    });\n  };\n\n  countTotalFeedback() {\n    const { good, neutral, bad } = this.state;\n    const total = good + neutral + bad;\n    return total;\n  }\n\n  countPositiveFeedbackPercentage() {\n    const { good } = this.state;\n    const total = this.countTotalFeedback();\n    const persentOfGood = ((good / total) * 100).toFixed(0);\n\n    return total ? persentOfGood : 0;\n  }\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptiops\n            options={Object.keys(this.state)}\n            onLeaveFeedback={this.handleBtnClick}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() > 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}